# =============================================================================
# SetAppointmentApp Environment Variables
# =============================================================================
# Copy this file to .env.local for local development
# For production deployment, set these in your Vercel dashboard
# Last Updated: 2025-10-30
# =============================================================================

# -----------------------------------------------------------------------------
# REQUIRED: Supabase Database Configuration
# -----------------------------------------------------------------------------
# Supabase is used for storing appointments and email logs
# Get these credentials from: https://app.supabase.com/project/_/settings/api
#
# 1. NEXT_PUBLIC_SUPABASE_URL - Your Supabase project URL
#    Format: https://[project-id].supabase.co
#    Public: Yes (safe to expose in browser)
#    Used by: Client-side and server-side code
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co

# 2. NEXT_PUBLIC_SUPABASE_ANON_KEY - Anonymous/public API key
#    Public: Yes (designed to be exposed, protected by RLS)
#    Used by: Client-side authentication and queries
#    Security: Row Level Security (RLS) policies protect data access
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key-here

# 3. SUPABASE_SERVICE_ROLE_KEY - Server-side admin key
#    Public: NO - NEVER expose this key in client-side code!
#    Used by: Server-side API routes only
#    Security: Bypasses RLS - handle with extreme care
#    Permissions: Full database access
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key-here

# -----------------------------------------------------------------------------
# REQUIRED: Gmail SMTP with OAuth2
# -----------------------------------------------------------------------------
# Gmail is used for sending appointment confirmation emails via OAuth2
# Setup guide: https://developers.google.com/gmail/api/quickstart/nodejs
#
# 4. GMAIL_USER - Your Gmail email address
#    Format: yourname@gmail.com
#    Public: NO - Keep this secret
#    Used by: Server-side email sending via Nodemailer
#    Example: john.doe@gmail.com
GMAIL_USER=your-email@gmail.com
#
# 5. GMAIL_CLIENT_ID - OAuth2 Client ID from Google Cloud Console
#    Setup: https://console.cloud.google.com/apis/credentials
#    Format: [alphanumeric].apps.googleusercontent.com
#    Public: NO - Keep this secret
#    Required: Enable Gmail API in Google Cloud Console
GMAIL_CLIENT_ID=your-client-id.apps.googleusercontent.com
#
# 6. GMAIL_CLIENT_SECRET - OAuth2 Client Secret
#    Public: NO - Keep this secret
#    Get from: Google Cloud Console → Credentials → OAuth 2.0 Client IDs
GMAIL_CLIENT_SECRET=your-client-secret
#
# 7. GMAIL_REFRESH_TOKEN - OAuth2 Refresh Token
#    Public: NO - Keep this secret
#    How to get: Use OAuth2 Playground or generate via googleapis
#    Guide: https://developers.google.com/oauthplayground/
GMAIL_REFRESH_TOKEN=your-refresh-token
#
# 8. GMAIL_ACCESS_TOKEN - OAuth2 Access Token (Optional)
#    Public: NO - Keep this secret
#    Note: Access tokens expire. Refresh token is used to generate new ones.
#    Only provide if you have a current access token (optional)
# GMAIL_ACCESS_TOKEN=your-access-token

# -----------------------------------------------------------------------------
# OPTIONAL: Vercel KV (Redis) - For Rate Limiting
# -----------------------------------------------------------------------------
# Redis is used for rate limiting API requests and form submissions
# Automatically configured when enabling storage in Vercel dashboard
#
# OPTION A: Native Vercel KV (Pro Plan)
# Get from: Vercel Dashboard → Storage → KV → Create → .env.local tab
# KV_REST_API_URL=https://your-region-your-id.kv.vercel-storage.com
# KV_REST_API_TOKEN=your-kv-token-here
# KV_REST_API_READ_ONLY_TOKEN=your-kv-readonly-token-here
#
# OPTION B: Upstash Redis via Marketplace (Hobby Plan)
# Get from: Vercel Dashboard → Storage → Marketplace → Upstash/Redis → Create
# UPSTASH_REDIS_REST_URL=https://your-region.upstash.io
# UPSTASH_REDIS_REST_TOKEN=your-upstash-token-here
#
# NOTE: Our code supports both! Use whichever Vercel creates for you.
# See docs/VERCEL_KV_SETUP_HOBBY_PLAN.md for Hobby plan setup
# See docs/VERCEL_KV_SETUP_GUIDE.md for Pro plan setup

# -----------------------------------------------------------------------------
# REQUIRED: Email Configuration
# -----------------------------------------------------------------------------
# Configure sender and recipient email addresses for notifications
#
# 9. EMAIL_FROM - Sender email address for outgoing emails
#    Format: yourname@gmail.com or "Your Name <yourname@gmail.com>"
#    Requirements:
#      - Must match GMAIL_USER or be an alias configured in Gmail
#      - For personal Gmail: use your Gmail address
#      - For Google Workspace: can use an alias if configured
EMAIL_FROM=your-email@gmail.com

# 10. EMAIL_ADMIN - Admin email address for appointment notifications
#     Format: admin@yourdomain.com or admin@gmail.com
#     Purpose: Receives notifications when new appointments are booked
#     Can be: Your personal email, team email, or CRM integration email
EMAIL_ADMIN=admin@yourdomain.com

# -----------------------------------------------------------------------------
# OPTIONAL: Application Configuration
# -----------------------------------------------------------------------------
# Application URL - Used for generating absolute URLs in emails
# Local Development: http://localhost:3000
# Production: Set automatically by Vercel (uses VERCEL_URL)
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Node Environment
# Values: development | production | test
# Automatically set by Node.js and Vercel
NODE_ENV=development

# -----------------------------------------------------------------------------
# OPTIONAL: Email Branding (Phase 4 - Sprint 3)
# -----------------------------------------------------------------------------
# Customize the company name and signature used in all email templates
# If not set, defaults to generic values
#
# 11. NEXT_PUBLIC_COMPANY_NAME - Your company/brand name
#     Used in: Email subject lines, email signatures
#     Example: "Acme Corp", "My Business", "John's Consulting"
#     Default: "Our Team"
# NEXT_PUBLIC_COMPANY_NAME=Your Company Name
#
# 12. EMAIL_FROM_NAME - Name displayed in email "From" field signature
#     Used in: Email signature line (e.g., "Best regards, Your Team")
#     Example: "The Acme Team", "John", "Support Team"
#     Default: Falls back to NEXT_PUBLIC_COMPANY_NAME or "The Team"
# EMAIL_FROM_NAME=Your Team Name

# -----------------------------------------------------------------------------
# OPTIONAL: Analytics & Monitoring
# -----------------------------------------------------------------------------
# Uncomment and configure these for analytics tracking

# Google Analytics 4
# Get your measurement ID from: https://analytics.google.com/
# Format: G-XXXXXXXXXX
# NEXT_PUBLIC_GA_ID=G-XXXXXXXXXX

# Vercel Analytics (automatically enabled if using Vercel Analytics product)
# No configuration needed - enable in Vercel dashboard

# -----------------------------------------------------------------------------
# OPTIONAL: Third-Party Integrations
# -----------------------------------------------------------------------------
# Add any additional API keys or secrets here as your application grows

# Sentry Error Tracking (for production monitoring)
# Get your DSN from: https://sentry.io/
# NEXT_PUBLIC_SENTRY_DSN=https://[key]@[org].ingest.sentry.io/[project]
# SENTRY_AUTH_TOKEN=your-auth-token

# -----------------------------------------------------------------------------
# OPTIONAL: Google Calendar Integration (Phase 4 - Sprint 4)
# -----------------------------------------------------------------------------
# Sync appointments to Google Calendar via OAuth 2.0
# Get credentials from: https://console.cloud.google.com/apis/credentials
#
# 13. GOOGLE_CLIENT_ID - OAuth 2.0 Client ID (for Calendar integration only)
#     Setup: Enable Google Calendar API → Create OAuth Client → Web application
#     Authorized redirect URIs: https://yourdomain.com/api/calendar/google/callback
#     Format: [project-id].apps.googleusercontent.com
#     Note: This is separate from GMAIL_CLIENT_ID above
# GOOGLE_CLIENT_ID=your-client-id.apps.googleusercontent.com
#
# 14. GOOGLE_CLIENT_SECRET - OAuth 2.0 Client Secret (for Calendar integration)
#     Public: NO - Keep this secret
#     Used by: Server-side API routes for token exchange
#     Note: This is separate from GMAIL_CLIENT_SECRET above
# GOOGLE_CLIENT_SECRET=your-client-secret

# -----------------------------------------------------------------------------
# OPTIONAL: Microsoft Outlook Integration (Phase 4 - Sprint 4)
# -----------------------------------------------------------------------------
# Sync appointments to Outlook Calendar via Microsoft Graph API
# Get credentials from: https://portal.azure.com/ → Azure AD → App registrations
#
# 15. MICROSOFT_CLIENT_ID - Application (client) ID
#     Setup: Register app → API permissions → Calendars.ReadWrite
#     Redirect URI: https://yourdomain.com/api/calendar/outlook/callback
# MICROSOFT_CLIENT_ID=your-app-id
#
# 16. MICROSOFT_CLIENT_SECRET - Client secret
#     Public: NO - Keep this secret
#     Setup: Certificates & secrets → New client secret
# MICROSOFT_CLIENT_SECRET=your-client-secret
#
# 17. MICROSOFT_TENANT_ID - Directory (tenant) ID
#     Format: common (multi-tenant) or specific tenant ID
#     Use "common" for personal Microsoft accounts
# MICROSOFT_TENANT_ID=common

# -----------------------------------------------------------------------------
# AUTOMATIC: Vercel Environment Variables
# -----------------------------------------------------------------------------
# These are automatically set by Vercel - DO NOT set manually
# Available at runtime: process.env.VERCEL_URL, etc.
#
# VERCEL_URL - Deployment URL (e.g., project-name-xyz.vercel.app)
# VERCEL_ENV - Environment (production | preview | development)
# VERCEL_GIT_COMMIT_SHA - Git commit SHA
# VERCEL_GIT_COMMIT_MESSAGE - Git commit message

# -----------------------------------------------------------------------------
# SECURITY NOTES
# -----------------------------------------------------------------------------
# ⚠️  NEVER commit .env.local or .env with real credentials to Git
# ⚠️  The .env.local file is in .gitignore - keep it that way
# ⚠️  Service role keys bypass all security - use only in server-side code
# ⚠️  Rotate API keys immediately if they are ever exposed publicly
# ⚠️  Use different API keys for development and production
# ⚠️  Enable Row Level Security (RLS) on all Supabase tables
#
# For Vercel deployment:
# 1. Go to Project Settings → Environment Variables
# 2. Add each REQUIRED variable (all 6 above)
# 3. Set for Production, Preview, and Development as needed
# 4. Redeploy if variables are changed after initial deployment
#
# For local development:
# 1. Copy this file: cp .env.example .env.local
# 2. Replace all placeholder values with real credentials
# 3. Never commit .env.local to version control
# 4. Run database migrations before first use
#
# Documentation:
# - Setup Guide: docs/VERCEL_DEPLOYMENT_GUIDE.md
# - Environment Variables: README.md#environment-variables
# - Security Best Practices: README.md#security
# =============================================================================
